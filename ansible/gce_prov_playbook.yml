---
### provision GCP GCE instance
- hosts: localhost
  connection: local
  gather_facts: false
  user: root
  pre_tasks:
    - include_vars: variables.yml

  tasks:
    - name: Provision {{ gce_count }} instances with tag {{ gce_tag_Role }}
      gce:
        instance_names: dev
        zone: "{{ gce_zone }}"
        machine_type: "{{ gce_machine_type }}"
        image: "{{ gce_image }}"
        tags: "{{ gce_tag_Role }}"
        num_instances: "{{ gce_count }}"
        disk_size: "{{ gce_volume_size }}"
        service_account_email: "{{ gce_service_account_email }}"
        credentials_file: "{{ SERVICE_ACCOUNT_JSON }}"
        project_id: "{{ gce_project_id }}"
      register: gce

    - debug:
      var: gce
      verbosity: 2

#
#    - name: Save host data
#      add_host:
#        hostname: "{{ item.public_ip }}"
#        groupname: gce_instances_ips
#      with_items: "{{ gce.instance_data }}"
#
#    - name: Wait for SSH for instances
#      wait_for:
#        delay: 1
#        host: "{{ item.public_ip }}"
#        port: 22
#        state: started
#        timeout: 30
#      with_items: "{{ gce.instance_data }}"
#
#    # update shippable resource state
#    - name: run cmd
#      shell: |
#        shipctl put_resource_state "{{ STATE_RES_NAME }}" "INST_{{ item.ami_launch_index }}_PUBLIC_IP" "{{ item.public_ip }}"
#        shipctl put_resource_state "{{ STATE_RES_NAME }}" "INST_{{ item.ami_launch_index }}_ID" "{{ item.id }}"
#        shipctl put_resource_state_multi "{{ STATE_RES_NAME }}" "ec2_tag_Type={{ ec2_tag_Type }}" "ec2_tag_Role={{ ec2_tag_Role }}" "ec2_region={{ ec2_region }}"
#      with_items: "{{ ec2.instances }}"
#
#  post_tasks:
#    - name: refresh hosts inventory list
#      meta: refresh_inventory
